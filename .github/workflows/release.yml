name: Build

on:
  push:
    branches:
      - release

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    env:
      RUST_VERSION: 1.62.1
      NODE_VERSION: 16
      GH_ACTIONS: true
      RUST_BACKTRACE: full
      API_URL: ${{ secrets.API_URL }}
      VOICE_URL: ${{ secrets.VOICE_URL }}
      DISCORD_APP_ID: ${{ secrets.DISCORD_APP_ID }}
      TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      TAURI_KEY_PASSWORD:

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ env.RUST_VERSION }}

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Edit package.json
        uses: RadovanPelka/github-action-json@main
        with:
          path: "package.json"
          replaceWith: |
            {
              "name": "kratercord",
              "version": "0.1.0",
              "main": "index.js",
              "repository": "https://github.com/gorgbus/kraterCord.git",
              "author": "gorgbus",
              "license": "MIT",
              "private": true,
              "workspaces": [
                "desktop-client",
                "common"
              ]
            }

      - name: Get app version
        id: app_version
        uses: juliangruber/read-file-action@v1.1.6
        with:
          path: "desktop-client/src-tauri/tauri.conf.json" 

      - name: Build application
        working-directory: ./desktop-client
        run: |
          yarn 
          yarn tauri build

      - name: wait 2 mins to make sure gist will update properly
        if: matrix.os == 'windows-latest'
        run: Start-Sleep -s 120
        shell: powershell

      - name: Release App
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ fromJson(steps.app_version.outputs.content).package.version }}"
          files: |
            desktop-client/src-tauri/target/release/bundle/appimage/kratercord_*.AppImage.tar.gz
            desktop-client/src-tauri/target/release/bundle/appimage/kratercord_*.AppImage
            desktop-client/src-tauri/target/release/bundle/msi/kratercord_*.msi
            desktop-client/src-tauri/target/release/bundle/msi/kratercord_*.msi.zip
      
      - name: Get linux .sig file
        if: matrix.os == 'ubuntu-latest'
        uses: juliangruber/read-file-action@v1.1.6
        id: linux_sig
        with:
          path: "desktop-client/src-tauri/target/release/bundle/appimage/kratercord_${{ fromJson(steps.app_version.outputs.content).package.version }}_amd64.AppImage.tar.gz.sig"

      - name: Get windows .sig file
        if: matrix.os == 'windows-latest'
        uses: juliangruber/read-file-action@v1.1.6
        id: win_sig
        with:
          path: "desktop-client/src-tauri/target/release/bundle/msi/kratercord_${{ fromJson(steps.app_version.outputs.content).package.version }}_x64_en-US.msi.zip.sig"

      - name: Get meta.json from gist
        uses: gorgbus/read-gist-file@main
        id: gist_content
        with:
          gist_id: "49616bddc8762d6e8a9f43fca5b74c06"
          file_name: "meta.json"

      - name: Edit meta.json version
        uses: gorgbus/edit-json-string@main
        id: new_gist_ver
        with:
          json_string: ${{ steps.gist_content.outputs.content }}
          field: "version"
          value: ${{ fromJson(steps.app_version.outputs.content).package.version }}

      - name: Edit meta.json win download
        if: matrix.os == 'windows-latest'
        uses: gorgbus/edit-json-string@main
        id: new_gist_win
        with:
          json_string: ${{ steps.new_gist_ver.outputs.content }}
          field: "platforms.windows-x86_64.url"
          value: "https://github.com/gorgbus/kratercord/releases/download/v${{ fromJson(steps.app_version.outputs.content).package.version }}/kratercord_${{ fromJson(steps.app_version.outputs.content).package.version }}_x64_en-US.msi.zip"
      
      - name: Edit meta.json win sig
        if: matrix.os == 'windows-latest'
        uses: gorgbus/edit-json-string@main
        id: new_gist_sig_win
        with:
          json_string: ${{ steps.new_gist_win.outputs.content }}
          field: "platforms.windows-x86_64.signature"
          value: ${{ steps.win_sig.outputs.content }}

      - name: Edit meta.json linux download
        if: matrix.os == 'ubuntu-latest'
        uses: gorgbus/edit-json-string@main
        id: new_gist_linux
        with:
          json_string: ${{ steps.new_gist_ver.outputs.content }}
          field: "platforms.linux-x86_64.url"
          value: "https://github.com/gorgbus/kratercord/releases/download/v${{ fromJson(steps.app_version.outputs.content).package.version }}/kratercord_${{ fromJson(steps.app_version.outputs.content).package.version }}_amd64.AppImage.tar.gz"

      - name: Edit meta.json linux sig
        if: matrix.os == 'ubuntu-latest'
        uses: gorgbus/edit-json-string@main
        id: new_gist_sig_linux
        with:
          json_string: ${{ steps.new_gist_linux.outputs.content }}
          field: "platforms.linux-x86_64.signature"
          value: ${{ steps.linux_sig.outputs.content }}

      - name: Create local meta.json win
        if: matrix.os == 'windows-latest'
        uses: jsdaniell/create-json@v1.2.1
        with:
          name: "meta.json"
          json: ${{ steps.new_gist_sig_win.outputs.content }}
          dir: "./"
      
      - name: Create local meta.json linux
        if: matrix.os == 'ubuntu-latest'
        uses: jsdaniell/create-json@v1.2.1
        with:
          name: "meta.json"
          json: ${{ steps.new_gist_sig_linux.outputs.content }}
          dir: "./"

      - name: Update gist
        uses: exuanbo/actions-deploy-gist@v1.1.4
        with:
          token: ${{ secrets.TOKEN }}
          gist_id: 49616bddc8762d6e8a9f43fca5b74c06
          gist_file_name: meta.json
          file_path: "./meta.json"